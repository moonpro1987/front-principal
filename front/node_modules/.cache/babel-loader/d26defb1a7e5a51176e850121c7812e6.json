{"ast":null,"code":"import { isUndefined } from 'util';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie/es6';\nimport { APIHOST as host } from '../../app.json';\nconst cookies = new Cookies();\nexport function calculaExtraccionSesion() {\n  const now = new Date().getTime();\n  const newDate = now + 60 * 30 * 1000;\n  return new Date(newDate);\n}\nexport function getSession() {\n  return isUndefined(cookies.get('_s')) ? false : cookies.get('_s');\n}\n\nfunction renovarSesion() {\n  const sesion = getSession();\n  if (!sesion) window.location.href = '/login';\n  cookies.set('_s', sesion, {\n    path: '/',\n    expires: calculaExtraccionSesion()\n  });\n  return sesion;\n}\n\nexport const request = {\n  get: function (services) {\n    let token = renovarSesion();\n    return axios.get(`${host}${services}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  },\n  post: function (services, data) {\n    let token = renovarSesion();\n    return axios.post(`${host}${services}`, data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  },\n  put: function (services, data) {\n    let token = renovarSesion();\n    return axios.put(`${host}${services}`, data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  },\n  delete: function (services) {\n    let token = renovarSesion();\n    return axios.delete(`${host}${services}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/PATICO/OneDrive/INGLES SENA/Documentos/CICLO 4/front-principal/front/src/components/helper/helpers.js"],"names":["isUndefined","axios","Cookies","APIHOST","host","cookies","calculaExtraccionSesion","now","Date","getTime","newDate","getSession","get","renovarSesion","sesion","window","location","href","set","path","expires","request","services","token","headers","Authorization","post","data","put","delete"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,OAAO,IAAIC,IAApB,QAAgC,gBAAhC;AAEA,MAAMC,OAAO,GAAG,IAAIH,OAAJ,EAAhB;AAEA,OAAO,SAASI,uBAAT,GAAmC;AACxC,QAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACA,QAAMC,OAAO,GAAGH,GAAG,GAAG,KAAK,EAAL,GAAU,IAAhC;AACA,SAAO,IAAIC,IAAJ,CAASE,OAAT,CAAP;AACD;AAED,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAOX,WAAW,CAACK,OAAO,CAACO,GAAR,CAAY,IAAZ,CAAD,CAAX,GAAiC,KAAjC,GAAyCP,OAAO,CAACO,GAAR,CAAY,IAAZ,CAAhD;AACD;;AAED,SAASC,aAAT,GAAyB;AACvB,QAAMC,MAAM,GAAGH,UAAU,EAAzB;AACA,MAAI,CAACG,MAAL,EAAaC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AAEbZ,EAAAA,OAAO,CAACa,GAAR,CAAY,IAAZ,EAAkBJ,MAAlB,EAA0B;AACxBK,IAAAA,IAAI,EAAE,GADkB;AAExBC,IAAAA,OAAO,EAAEd,uBAAuB;AAFR,GAA1B;AAIA,SAAOQ,MAAP;AACD;;AAED,OAAO,MAAMO,OAAO,GAAG;AACrBT,EAAAA,GAAG,EAAE,UAAUU,QAAV,EAAoB;AACvB,QAAIC,KAAK,GAAGV,aAAa,EAAzB;AACA,WAAOZ,KAAK,CAACW,GAAN,CAAW,GAAER,IAAK,GAAEkB,QAAS,EAA7B,EAAgC;AACrCE,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASF,KAAM;AADxB;AAD4B,KAAhC,CAAP;AAKD,GARoB;AAUrBG,EAAAA,IAAI,EAAE,UAAUJ,QAAV,EAAoBK,IAApB,EAA0B;AAC9B,QAAIJ,KAAK,GAAGV,aAAa,EAAzB;AACA,WAAOZ,KAAK,CAACyB,IAAN,CAAY,GAAEtB,IAAK,GAAEkB,QAAS,EAA9B,EAAiCK,IAAjC,EAAsC;AAC3CH,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASF,KAAM;AADxB;AADkC,KAAtC,CAAP;AAKD,GAjBoB;AAmBrBK,EAAAA,GAAG,EAAE,UAAUN,QAAV,EAAoBK,IAApB,EAA0B;AAC7B,QAAIJ,KAAK,GAAGV,aAAa,EAAzB;AACA,WAAOZ,KAAK,CAAC2B,GAAN,CAAW,GAAExB,IAAK,GAAEkB,QAAS,EAA7B,EAAgCK,IAAhC,EAAqC;AAC1CH,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASF,KAAM;AADxB;AADiC,KAArC,CAAP;AAKD,GA1BoB;AA4BrBM,EAAAA,MAAM,EAAE,UAAUP,QAAV,EAAoB;AAC1B,QAAIC,KAAK,GAAGV,aAAa,EAAzB;AACA,WAAOZ,KAAK,CAAC4B,MAAN,CAAc,GAAEzB,IAAK,GAAEkB,QAAS,EAAhC,EAAmC;AACxCE,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASF,KAAM;AADxB;AAD+B,KAAnC,CAAP;AAKD;AAnCoB,CAAhB","sourcesContent":["import { isUndefined } from 'util';\r\nimport axios from 'axios';\r\nimport Cookies from 'universal-cookie/es6';\r\nimport { APIHOST as host } from '../../app.json';\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport function calculaExtraccionSesion() {\r\n  const now = new Date().getTime();\r\n  const newDate = now + 60 * 30 * 1000;\r\n  return new Date(newDate);\r\n}\r\n\r\nexport function getSession() {\r\n  return isUndefined(cookies.get('_s')) ? false : cookies.get('_s');\r\n}\r\n\r\nfunction renovarSesion() {\r\n  const sesion = getSession();\r\n  if (!sesion) window.location.href = '/login';\r\n\r\n  cookies.set('_s', sesion, {\r\n    path: '/',\r\n    expires: calculaExtraccionSesion(),\r\n  });\r\n  return sesion;\r\n}\r\n\r\nexport const request = {\r\n  get: function (services) {\r\n    let token = renovarSesion();\r\n    return axios.get(`${host}${services}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n\r\n  post: function (services, data) {\r\n    let token = renovarSesion();\r\n    return axios.post(`${host}${services}`, data,{\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n\r\n  put: function (services, data) {\r\n    let token = renovarSesion();\r\n    return axios.put(`${host}${services}`, data,{\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n\r\n  delete: function (services) {\r\n    let token = renovarSesion();\r\n    return axios.delete(`${host}${services}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}